<?php
/**
 * Orain's playbook is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or (at your option)
 * any later version.
 *
 * Orain's playbook is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Affero General Public License along
 * with Orain's playbook.  If not, see <http://www.gnu.org/licenses/>.
 */

// Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

$wgConf = new SiteConfiguration;
$wgConf->suffixes = array( 'wiki' );
$wgConf->localVHosts = array( '{{mysql_address}}' );

// @note TBLSRC_LOCALPAGE and TBLSRC_URL are defined automatically by the TitleBlacklist entry file.
//       therefore we use the below ORAIN constants for referencing the values in LocalSettings.php
//       as the true constants don't get defined until after we want to use them.
define( 'TBLSRC_LOCALPAGE_ORAIN', 1 );
define( 'TBLSRC_URL_ORAIN', 2 );

/**
 * Define namespaces for all wikis
 *
 * @note These namespaces technically are defined across all wikis, they are simply not enabled everywhere.
 * @note These namespaces should NEVER be removed unless all wikis that have ever used them have been deleted
 */

// extension/DPLforum
// @note NS_FORUM and NS_FORUM_TALK are defined automatically by the DPLforum entry file.
//       therefore we use the below ORAIN constants for referencing the values in LocalSettings.php
//       as the true constants don't get defined until after we want to use them.
define( 'NS_FORUM_ORAIN', 110 );
define( 'NS_FORUM_TALK_ORAIN', 111 );
// / extension/DPLforum

// allthetropeswiki
define( 'NS_TROPEWORKSHOP', 520 );
define( 'NS_TROPEWORKSHOP_TALK', 521 );
// / allthetropeswiki

// botwiki
define( 'NS_FRAMEWORK', 500 );
define( 'NS_FRAMEWORK_TALK', 501 );
define( 'NS_SCRIPT', 502 );
define( 'NS_SCRIPT_TALK', 503 );
define( 'NS_BOT', 504 );
define( 'NS_BOT_TALK', 505 );
define( 'NS_RUN', 506 );
define( 'NS_RUN_TALK', 507 );
// /botwiki

// councilwiki
define( 'NS_RESOLUTION', 522 );
define( 'NS_RESOLUTION_TALK', 523 );
define( 'NS_WORKSPACE', 524 );
define( 'NS_WORKSPACE_TALK', 525 );
// /councilwiki

// frmodamobwiki
define( 'NS_PORTAIL', 516 );
define( 'NS_PORTAIL_TALK', 517 );
define( 'NS_PROJET', 518 );
define( 'NS_PROJET_TALK', 519 );
// /frmodamobwiki

// grepobot
define( 'NS_OP', 526 );
define( 'NS_OP_TALK', 527 );
// /grepobot

// levelswiki
define( 'NS_GUIDE', 258 );
define( 'NS_GUIDE_TALK', 259 );
define( 'NS_MOD', 260 );
define( 'NS_MOD_TALK', 261 );
// /levelswiki

// Reviwiki
define( 'NS_SERVER', 526);
define( 'NS_SERVER_TALK', 527);
// /Reviwiki

// wikinambaswiki
define( 'NS_OFICINA', 508 );
define( 'NS_OFICINA_TALK', 509 );
define( 'NS_PROJETO', 510 );
define( 'NS_PROJETO_TALK', 511 );
define( 'NS_ATIVIDADE', 512 );
define( 'NS_ATIVIDADE_TALK', 513 );
define( 'NS_ESTUDIO', 514 );
define( 'NS_ESTUDIO_TALK', 515 );
// /wikinambaswiki


# Load the 'globalextensions' here
require_once( "$IP/GlobalExtensions.php" );

/**
 * NOTE: When changing the below variable all caches need to be updated otherwise
 * we will continue linking to old file locations on cached pages!
 */
$wmgUploadHostname = "static.orain.org";

/**
 * Define settings per wiki
 * @see https://www.mediawiki.org/wiki/Manual:$wgConf
 */
$wgConf->settings = array(
	// AbuseFilter
	'wgAbuseFilterCentralDB' => array(
		'default' => 'metawiki',
	),
	'wgAbuseFilterIsCentral' => array(
		'default' => false,
		'metawiki' => true,
	),
	// /AbuseFilter

	// Anti-spam
	'wgAccountCreationThrottle' => array(
		'default' => 6,
	),
	'wgCaptchaClass' => array(
		'default' => 'Asirra',
	),
	'wgSpamBlacklistFiles' => array(
		'default' => array(
			"DB: metawiki Spam_blacklist",
		),
	),
	'wgTitleBlacklistSources' => array(
		'default' => array(
			array(
				'type' => TBLSRC_LOCALPAGE_ORAIN,
				'src' => 'MediaWiki:Titleblacklist',
			),
			array(
				'type' => TBLSRC_URL_ORAIN,
				'src' => '//meta.orain.org/w/index.php?title=Title_blacklist&action=raw',
			),
		),
	),
	// /Anti-spam

	// BetaFeatures
	'wmgUseBetaFeatures' => array(
		'default' => false,
		//'allthetropeswiki' => true,
		'extloadwiki' => true,
	),
	// /BetaFeatures

	// Block
	'wgBlockAllowsUTEdit' => array(
		'default' => true,
	),
	'wmgUseTorBlock' => array(
		'default' => true,
		'extloadwiki' => true,
		'private' => false,
	),
	// /Block

	// Bigdelete
	'wgDeleteRevisionsLimit' => array(
		'default' => 2000, // Default bigdelete limit
	),
	// /Bigdelete

	// Global block
	'wgApplyGlobalBlocks' => array(
		'default' => true,
		'metawiki' => false,
	),
	// /Global block

	// Cache
	'wgEnableSidebarCache' => array(
		'default' => true,
		'spiralwiki' => false, // This broke displaying of Collection portlets addshore 20-feb-2014 issue #173
	),
	'wgHitcounterUpdateFreq' => array(
		'default' => 20,
	),
	'wgMiserMode' => array(
		'allthetropeswiki' => true,
	),
	'wgParserCacheExpireTime' => array(
		'default' => 604800, // 7 days
	),
	'wgRevisionCacheExpiry' => array(
		'default' => 259200, // 3 days
	),
	'wgSessionsInObjectCache' => array(
		'default' => true,
	),
	'wgUseFileCache' => array(
		'default' => true,
	),
	'wgUseLocalMessageCache' => array(
		'default' => false,
	),
	// /Cache

	// CentralAuth
	'wgCentralAuthAutoLoginWikis' => array(
		'default' => array(
            		'encyclopediamuricana.us' => 'encyclopediamuricanawiki',
			'rationalwiki.ssu.lt' => 'rationalwiki',
			'nazis.exposed' => 'nazisexposedwiki',
			'spiral.wiki' => 'spiralwiki',
			'wiki.revi.pe.kr' => 'reviwiki',
			'wikiconstitucio.org' => 'wikiconstituciowiki',
			'degu.wiki' => 'deguwiki',
		),
	),
	'wgCentralAuthAutoMigrate' => array(
		'default' => true,
	),
	'wgCentralAuthAutoNew' => array(
		'default' => true,
	),
	'wgCentralAuthCookieDomain' => array(
		'default' => '.orain.org',
	),
	'wgCentralAuthCookies' => array(
		'default' => true,
	),
	'wgCentralAuthCreateOnView' => array(
		'default' => true,
	),
	'wgCentralAuthLoginIcon' => array(
	    'default' => '/usr/share/nginx/favicons/default.ico',
	    'spiralwiki' => '/usr/share/nginx/favicons/spiral.wiki.ico',
	),
	'wgCentralAuthLoginWiki' => array(
		'default' => 'loginwiki',
	),
	'wgCentralAuthSilentLogin' => array(
		'default' => true,
	),
	'wgDisableUnmergedEditing' => array(
		'default' => false,
	),
	'wgSiteMatrixSites' => array(
		'default' => array(),
	),
	// /CentralAuth

	// CentralNotice
	'wgNoticeInfrastructure' => array(
		'default' => false,
		'metawiki' => true,
	),
	'wgNoticeProjects' => array(
		'default' => array(),
		// NOTE: 'orain' group means official wikis
		'metawiki' => array( 'orain', 'closed', 'private', 'public' ),
	),
	'wgCentralHost' => array(
		'default' => '//meta.orain.org',
	),
	'wgCentralPagePath' => array(
		'default' => '//meta.orain.org/w/index.php',
	),
	'wgNoticeProject' => array(
		'default' => 'public',
		'metawiki' => 'orain',
		'extloadwiki' => 'orain',
		'loginwiki' => 'orain',
		// NOTE: private and closed groups are set further down
	),
	// /CentralNotice

	// CheckUser
	'wgCheckUserForceSummary' => array(
		'default' => true,
	),
	// /CheckUser

	// Database
	'wgCompressRevisions' => array(
		'default' => true,
	),
	'wgDBpassword' => array(
		'default' => "{{mw_db_password}}",
	),
	'wgDBprefix' => array(
		'default' => '',
	),
	'wgDBserver' => array(
		'default' => "{{mysql_address}}",
	),
	'wgDBTableOptions' => array(
		'default' => "ENGINE=InnoDB, DEFAULT CHARSET=binary",
	),
	'wgDBtype' => array(
		'default' => 'mysql',
	),
	'wgDBuser' => array(
		'default' => "{{mw_db_user}}",
	),
	'wgSharedDB' => array(
		'default' => 'metawiki',
	),
	'wgSharedTables' => array(
		'default' => array(),
	),
	// /Database

	//Debug
	'wgDebugComments' => array(
		'default' => false,
		'extloadwiki' => true,
	),
	// /Debug

	// Email
	'wgEmailAuthentication' => array(
		'default' => true,
	),
	'wgEmergencyContact' => array(
		'default' => 'noreply@orain.org',
	),
	'wgEnableEmail' => array(
		'default' => true,
	),
	'wgEnableUserEmail' => array(
		'default' => true,
	),
	'wgEnotifMinorEdits' => array(
		'default' => true,
	),
	'wgEnotifUserTalk' => array(
		'default' => true,
	),
	'wgEnotifWatchlist' => array(
		'default' => true,
	),
	'wgPasswordSender' => array(
		'default' => 'noreply@orain.org',
	),
	'wgSMTP' => array(
		'default' => array(
			'host' => 'mail.orain.org',
			'port' => 25,
			'IDHost' => 'orain.org',
			'auth' => false,
			'username' => 'noreply',
			'password' => '{{email_password}}',
		),
	),
	// /Email

	// Files
	'wgEnableUploads' => array(
		'default' => false,
		'upload' => true,
	),
	'wgFileExtensions' => array(
		'default' => array( 'gif', 'ico', 'jpeg', 'jpg', 'ogg', 'png', 'svg' ),
		'+councilwiki' => array( 'pdf' ),
		'+nationalewiki' => array( 'pdf' ),
		'+spiralwiki'=> array( 'pdf' ),
	),
	'wgAllowTitlesInSVG' => array(
		'default' => true,
	),
	'wgGenerateThumbnailOnParse' => array(
		'default' => false,
	),
	'wgUseInstantCommons' => array(
		'default' => true,
	),
	// /Files

	// Global Group Settings
	'+wgAvailableRights' => array( // + to avoid any possible conflicts
		'default' => array(
			'debug', // Debugging for sysadmins
			'refreshspecial', // Make use of right on attwiki for sysadmins
			'steward', // Allow this restriction level be added to the global usergroup
			'torunblocked', // Allow this to be added to global groups
		),
	),
	// /Global Group Settings

	// GraphicsMagick
	'wgImageMagickConvertCommand' => array(
		'default' => "/usr/bin/convert",
	),
	'wgShellLocale' => array(
		'default' => "en_US.utf8",
	),
	'wgUseImageMagick' => array(
		'default' => true,
	),
	// /GraphicsMagick

	// Group overrides
	'defaultGroupOverrides' => array(
		'default' => array(
		),
	),
	'specificGroupOverrides' => array(
		'default' => array(),
		'closed' => array(
			'*' => array(
				'edit' => false,
				'createaccount' => false,
			),
			'autoconfirmed' => array(
				'editsemiprotected' => false,
				'patrol' => false,
			),
			'autopatrolled' => array(
				'patrol' => false,
			),
			'bot' => array(
				'editsemiprotected' => false,
			),
			'rollbacker' => array(
				'rollback' => false,
			),
			'sysop' => array(
				'abusefilter-modify' => false,
				'abusefilter-modify-restricted' => false,
				'abusefilter-revert' => false,
				'block' => false,
				'blockemail' => false,
				'createaccount' => false,
				'delete' => false,
				'editinterface' => false,
				'editprotected' => false,
				'editsemiprotected' => false,
				'globalblock-whitelist' => false,
				'import' => false,
				'importupload' => false,
				'move' => false,
				'movefile' => false,
				'move-rootuserpages' => false,
				'move-subpages' => false,
				'nuke' => false,
				'patrol' => false,
				'protect' => false,
				'reupload' => false,
				'reupload-shared' => false,
				'rollback' => false,
				'unblockself' => false,
				'undelete' => false,
				'upload' => false,
			),
			'user' => array(
				'edit' => false,
				'move' => false,
				'move-rootuserpages' => false,
				'move-subpages' => false,
				'movefile' => false,
				'reupload' => false,
				'reupload-shared' => false,
				'upload' => false,
			),
		),
		'private' => array(
			'*' => array(
				'read' => false,
			),
			'user' => array(
				'read' => false,
			),
			'member' => array(
				'read' => true,
			),
			'sysop' => array(
				'read' => true,
			),
			'bureaucrat' => array(
				'read' => true,
			),
		),
	),
	// /Group overrides

	// HideUser
	'wgHideUserContribLimit' => array(
		'default' => 1000,
	),
	// /HideUser

	//Hooks
	'wgSpecialVersionShowHooks' => array(
		'default' => false,
		'extloadwiki' => true,
	),
	// /Hooks

	// Imports
	'wgImportSources' => array(
		'default' => array(
			'meta',
			'test'
		),
		'+verkeerwiki' => array(
			'jossewiki'
		),
	),
	// /Imports

	// Keys
	'wgSecretKey' => array(
		'default' => '{{wgSecretKey}}',
	),
	'wgUpgradeKey' => array(
		'default' => '{{wgUpgradeKey}}',
	),
	// /Keys

	// Language
	'wgLanguageCode' => array(
		'default' => 'en',
		'archivoespiral' => 'es',
		'dangsunsnwiki' => 'ko',
		'fairytailwiki' => 'es',
		'frmodamobwiki' => 'fr',
		'jossewiki' => 'nl',
		'nederlandwiki' => 'nl',
		'nlallthetropeswiki' => 'nl',
		'nlhistowiki' => 'nl',
		'nsswiki' => 'ko',
		'reviwiki' => 'ko',
		'keionrailwiki' => 'ko',
		'programwiki' => 'nl',
		'samandcatwiki' => 'es',
		'shiranowiki' => 'he',
		'ukrwiki1wiki' => 'uk',
		'verkeerwiki' => 'nl',
		'wikiconstituciowiki' => 'ca',
		'wikidemoswiki' => 'es',
		'wikinambaswiki' => 'pt-br',
		'wikiproustwiki' => 'fr',
		'worldpediawiki' => 'zh-hant',
		'worldnewswiki' => 'zh-tw',
		'wviruswiki' => 'fr',
		'zutphenwiki' => 'nl',
		
	),
	// /Language

	// License
	'wgRightsIcon' => array(
		'default' => "//$wmgUploadHostname/common/skins/common/images/cc-by-sa.png",
		'spiralwiki' => "//$wmgUploadHostname/common/skins/common/images/cc-0.png",
	),
	'wgRightsPage' => array(
		'default' => '',
	),
	'wgRightsText' => array(
		'default' => 'Creative Commons Attribution Share Alike',
		'spiralwiki' => 'CC0 Public Domain',
	),
	'wgRightsUrl' => array(
		'default' => 'https://creativecommons.org/licenses/by-sa/3.0/',
		'spiralwiki' => 'https://creativecommons.org/publicdomain/zero/1.0/',
	),
	// /License

	// MassMessage
	'wgNamespacesToPostIn' => array(
		'default' => array( NS_PROJECT, NS_USER_TALK ),
		'+metawiki' => array( NS_MAIN ),
	),
	'wgNamespacesToConvert' => array(
		'default' => array( NS_USER => NS_USER_TALK ),
	),
	'wgMassMessageAccountUsername' => array(
		'default' => 'OrainMessenger',
	),
	'wgAllowGlobalMessaging' => array(
		'default' => false,
		'metawiki' => true,
	),
	// /MassMessage

	// Misc. extensions
	'ceAllowConfirmedEmail' => array(
		'default' => true,
	),
	'wmgArchivedWiki' => array(
		'default' => false,
		'polymetawiki' => true,
	),
	'wmgClosedWiki' => array(
		'default' => false,
		'closed' => true,
	),
	'wgInterwikiViewOnly' => array(
		'default' => true,
		'metawiki' => false,
	),
	'wgMFAutodetectMobileView' => array(
		'default' => true,
	),
	'wmgPrivateWiki' => array(
		'default' => false,
		'private' => true,
	),
	'wgThanksConfirmationRequired' => array(
		'default' => true,
		'spiralwiki' => false,
		'testwiki' => false,
	),
	'wgScribuntoUseGeSHi' => array(
		'default' => true,
	),
	'wgScribuntoDefaultEngine' => array(
		'default' => 'luastandalone',
	),
    'wmgUseATTImages' => array(
        'default' => false,
        'nlallthetropeswiki' => true,
	),
	'wmgUseAPISandbox' => array(
		'default' => false,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'mediawikitesterswiki' => true,
		'metawiki' => true,
		'wikinambaswiki' => true,
	),
	'wmgUseCharInsert' => array(
		'default' => false,
		'allthetropeswiki' => true,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'keionrailwiki' => true,
		'mediawikitesterswiki' => true,
		'nlallthetropeswiki' => true,
		'verkeerwiki' => true,
	),
	'wmgUseCodeEditor' => array(
		'default' => false,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'allthetropeswiki' => true,
		'mediawikitesterswiki' => true,
		'nlallthetropeswiki' => true,
		'wikinambaswiki' => true,
	),
	'wmgUseCollectionPDF' => array(
		'default' => false,
		'spiralwiki' => true,
		'extloadwiki' => true, // All extensions enabled by default
		'wikiconstituciowiki' => true,
	),
	'wmgUseDPLforum' => array(
		'default' => false,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'allthetropeswiki' => true,
		'frmodamobwiki' => true,
		'mediawikitesterswiki' => true,
		'metawiki' => true,
		'nlallthetropeswiki' => true,
		'opensourcelearningwiki' => true,
	),
	'wmgUseEchoPack' => array(
		'default' => false,
		'allthetropeswiki' => true,
		'computechwiki' => true,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'mediawikitesterswiki' => true,
		'metawiki' => true,
		'nlallthetropeswiki' => true,
		'testwiki' => true,
		'spiralwiki' => true,
		'jossewiki' => true,
	),
	'wmgUseLiquidThreads' => array(
		'default' => false,
		'allthetropeswiki' => true,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'mediawikitesterswiki' => true,
		'nlallthetropeswiki' => true,
		'wikinambaswiki' => true,
	),
	'wmgUseOrainFooter' => array(
		'default' => true,
		'nationalewiki' => false,
	),
	'wmgUseMath' => array(
		'default' => false,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'jdwiki' => true,
		'networkwiki' => true,
		'pmr2014wiki' => true,
	),
	'wmgUseMobileFrontend' => array(
		'default' => false,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'keionrailwiki' => true,
		'grayhawkwiki' => true,
		'spiralwiki' => true,
		'wikiconstituciowiki' => true,
		'wikinambaswiki' => true,
	),
	'wmgUseQuiz' => array(
		'default' => false,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'mediawikitesterswiki' => true,
		'patereswiki' => true,
	),
	'wmgUseReplaceText' => array(
		'default' => false,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'mediawikitesterswiki' => true,
		'patereswiki' => true,
	),
	'wmgUseTabber' => array(
		'default' => false,
		'allthetropeswiki' => true,
		'botwiki' => true,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'mediawikitesterswiki' => true,
		'nlallthetropeswiki' => true,
		'patereswiki' => true,
	),
	'wmgUseWikiEditor' => array(
		'default' => true,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'elderlordswiki' => false,
		'nationalewiki' => false,
		'wikinambaswiki' => true,
	),
	// /Misc. extensions

	// Names
	'wgContentNamespaces' => array(
		'botwiki' => array( NS_BOT, NS_FRAMEWORK, NS_SCRIPT ),
		'levelswiki' => array( NS_GUIDE, NS_MOD ),
	),
	'wgExtraNamespaces' => array(
		'allthetropeswiki' => array(
			NS_TROPEWORKSHOP => 'Trope_Workshop',
			NS_TROPEWORKSHOP_TALK => 'Trope_Workshop_talk',
			NS_FORUM_ORAIN => 'Forum', // NS_FORUM_ORAIN should === NS_FORUM
			NS_FORUM_TALK_ORAIN => 'Forum_talk', // NS_FORUM_TALK_ORAIN should === NS_FORUM_TALK
		),
		'botwiki' => array(
			NS_BOT => 'Bot',
			NS_BOT_TALK => 'Bot_talk',
			NS_FRAMEWORK => 'Framework',
			NS_FRAMEWORK_TALK => 'Framework_talk',
			NS_RUN => 'Run',
			NS_RUN_TALK => 'Run_talk',
			NS_SCRIPT => 'Script',
			NS_SCRIPT_TALK => 'Script_talk',
		),
		'councilwiki' => array(
			NS_RESOLUTION => 'Resolution',
			NS_RESOLUTION_TALK => 'Resolution_talk',
			NS_WORKSPACE => 'Workspace',
			NS_WORKSPACE_TALK => 'Workspace_talk',
		),
		'grepobotwiki' => array(
			NS_OP => 'Op',
			NS_OP_TALK => 'Op_talk',
		),
		'frmodamobwiki' => array(
			NS_PORTAIL => 'Portail',
			NS_PORTAIL_TALK => 'Discussion_Portail',
			NS_PROJET => 'Projet',
			NS_PROJET_TALK => 'Discussion_Projet',
		),
		'metawiki' => array(
			NS_FORUM_ORAIN => 'Forum', // NS_FORUM_ORAIN should === NS_FORUM
			NS_FORUM_TALK_ORAIN => 'Forum_talk', // NS_FORUM_TALK_ORAIN should === NS_FORUM_TALK
		),
		'nlallthetropeswiki' => array(
			NS_TROPEWORKSHOP => 'Trope_Workshop',
			NS_TROPEWORKSHOP_TALK => 'Trope_Workshop_talk',
			NS_FORUM_ORAIN => 'Forum', // NS_FORUM_ORAIN should === NS_FORUM
			NS_FORUM_TALK_ORAIN => 'Forum_talk', // NS_FORUM_TALK_ORAIN should === NS_FORUM_TALK
		),
		'levelswiki' => array(
			NS_GUIDE => 'Guide',
			NS_GUIDE_TALK => 'Guide_talk',
			NS_MOD => 'Mod',
			NS_MOD_TALK => 'Mod_talk',
		),
        	'reviwiki' => array(
            		NS_SERVER => '서버',
            		NS_SERVER_TALK => '서버토론',
        	),
		'wikinambaswiki' => array(
			NS_OFICINA => 'Oficina',
			NS_OFICINA_TALK => 'Oficina_Discussão',
			NS_PROJETO => 'Projeto',
			NS_PROJETO_TALK => 'Projeto_Discussão',
			NS_ATIVIDADE => 'Atividade',
			NS_ATIVIDADE_TALK => 'Atividade_Discussão',
			NS_ESTUDIO => 'Estúdio',
			NS_ESTUDIO_TALK => 'Estúdio_Discussão',
		),
	),
	'wgMetaNamespace' => array(
		'metawiki' => 'Meta',
	),
	'wgNamespaceAliases' => array(
		'allthetropeswiki' => array(
			'YKTTW' => 520,
			'ATT' => NS_PROJECT,
		),
		'keionrailwiki' => array(
			'사' => NS_USER,
			'사토' => NS_USER_TALK,
		),
		'nlallthetropeswiki' => array(
			'YKTTW' => 520,
			'ATT' => NS_PROJECT,
		),
		'reviwiki' => array(
			'사' => NS_USER,
			'사토' => NS_USER_TALK,
			'Server' => NS_SERVER,
			'Server_talk' => NS_SERVER_TALK,
		),
	),
	'+wgNamespacesWithSubpages' => array(
		'default' => array(
			NS_TEMPLATE => true,
		),
		'+allthetropeswiki' => array(
			NS_MAIN => true,
			NS_FORUM_ORAIN => true, // NS_FORUM_ORAIN should === NS_FORUM
		),
		'+botwiki' => array(
			NS_BOT => true,
			NS_BOT_TALK => true,
			NS_CATEGORY => true,
			NS_FRAMEWORK => true,
			NS_FRAMEWORK_TALK => true,
			NS_RUN => true,
			NS_RUN_TALK => true,
			NS_SCRIPT => true,
			NS_SCRIPT_TALK => true,
		),
		'+councilwiki' => array(
			NS_RESOLUTION => true,
			NS_WORKSPACE => true,
		),
		'+frmodamobwiki' => array(
			NS_PORTAIL => true,
			NS_PORTAIL_TALK => true,
			NS_PROJET => true,
			NS_PROJET_TALK => true,
		),
		'+mediawikitesterswiki' => array(
			NS_MAIN => true,
		),
		'+metawiki' => array(
			NS_MAIN => true,
			NS_FORUM_ORAIN => true, // NS_FORUM_ORAIN should === NS_FORUM
		),
		'+nlallthetropeswiki' => array(
			NS_MAIN => true,
			NS_FORUM_ORAIN => true, // NS_FORUM_ORAIN should === NS_FORUM
		),
		'+reviwiki' => array(
			NS_MAIN => true,
			NS_SERVER => true,
		),
		'+techwiki' => array(
			NS_MAIN => true,
		),
		'+wikinambaswiki' => array(
			NS_OFICINA => true,
			NS_OFICINA_TALK => true,
			NS_PROJETO => true,
			NS_PROJETO_TALK => true,
			NS_ATIVIDADE => true,
			NS_ATIVIDADE_TALK => true,
			NS_ESTUDIO => true,
			NS_ESTUDIO_TALK => true,
		),
	),
	'wgSitename' => array(
		'default' => 'Unconfigured',
	),
	// /Names

	// OAuth
	'wgMWOAuthCentralWiki' => array(
		'default' => 'metawiki',
	),
	'wgMWOAuthSecureTokenTransfer' => array(
		'default' => true,
	),
	'wgMWOAuthSharedUserSource' => array(
		'default' => 'CentralAuth',
	),
	// /OAuth

	// ParserFunctions
	'wgPFEnableStringFunctions' => array(
		'default' => true,
	),
	// /ParserFunctions

	// Permissions
	'wgAddGroups' => array(
		'default' => array(
			'bureaucrat' => array(
				'autopatrolled',
				'bot',
				'bureaucrat',
				'confirmed',
				'rollbacker',
				'sysop',
			),
			'sysop' => array(
				'autopatrolled',
				'confirmed',
				'rollbacker',
			),
		),
		'+grepobotwiki' => array(
			'bureaucrat' => array(
				'botop',
			),
		),
		'+private' => array(
			'bureaucrat' => array(
				'member',
			),
			'sysop' => array(
				'member',
			),
		),
	),
	'wgAutoConfirmAge' => array(
		'default' => 111600, // 31 h * 60 min/h * 60 s/min
		'reviwiki' => 259200,
	),
	'wgAutoConfirmCount' => array(
		'default' => 5,
		'reviwiki' => 20,
	),
	'+wgGroupPermissions' => array(
		'default' => array(
			'*' => array(
				'abusefilter-log' => true,
				'abusefilter-log-detail' => true,
				'abusefilter-view' => true,
			),
			'autoconfirmed' => array(
				'patrol' => true,
				'skipcaptcha' => true,
				'upload' => true,
			),
			'autopatrolled' => array(
				'autopatrol' => true,
				'patrol' => true,
			),
			'bot' => array(
				'noanalytics' => true,
			),
			'checkuser' => array(
				// Leaks IP addresses
				'abusefilter-private' => true,
			),
			'emailconfirmed' => array(
				'skipcaptcha' => true,
			),
			'importer' => array(
				'import' => true,
				'importupload' => true,
			),
			'oversight' => array(
				'abusefilter-hidden-log' => true,
				'abusefilter-hide-log' => true,
				'browsearchive' => true,
				'deletedhistory' => true,
				'deletedtext' => true,
				'deletelogentry' => true,
				'deleterevision' => true,
				'hideuser' => true,
				'suppressionlog' => true,
				'suppressrevision' => true,
			),
			'rollbacker' => array(
				'autoconfirmed' => true,
				'rollback' => true,
			),
			'sysop' => array(
				'abusefilter-modify' => true,
				'abusefilter-modify-restricted' => true,
				'abusefilter-revert' => true,
				'deletelogentry' => true,
				'deleterevision' => true,
				'massmessage' => false,
				'rollback' => true,
			),
			'user' => array(
				'user' => true, // Enable a new restriction level globally
			),
		),
		'+archivoespiralwiki' => array(
			'*' => array(
				'edit' => false,
				'createpage' => false,
				'createtalk' => false,
			),
			'user' => array(
				'edit' => false,
				'createpage' => false,
				'createtalk' => false,
			),
			'sysop' => array(
				'edit' => true,
				'createpage' => true,
				'createtalk' => true,
			),
		),
		'+grepobotwiki' => array(
			'botop' => array(
				'read' => true,
			),
		),
		'+nationalewiki' => array(
			'*' => array(
				'edit' => false,
			),
		),
		'+keionrailwiki' => array(
			'user' => array(
				'movefile' => false,
			),
		),
		'+loginwiki' => array(
			'*' => array(
				'createtalk' => false,
				'centralauth-autoaccount' => true,
				'read' => true, // Make sure read rights are present
			),
			'user' => array(
				'read' => true, // Make sure read rights are present
				'edit' => false,
			),
		),
		'+metawiki' => array(
			'steward' => array(
				'abusefilter-modify-global' => true,
				'centralauth-lock' => true,
				'centralauth-oversight' => true,
				'centralauth-unmerge' => true,
				'createwiki' => true,
				'globalblock' => true,
				'globalunblock' => true,
				'interwiki' => true,
				'massmessage' => true,
				'noratelimit' => true,
				'userrights' => true,
				'userrights-interwiki' => true,
			),
			'sysop' => array(
				'interwiki' => true, // Allow sysops to edit interwiki data -John
			),
			'wikicreator' => array(
				'createwiki' => true,
			),
			'user' => array(
				'mwoauthproposeconsumer' => true,
				'mwoauthupdateownconsumer' => true,
			),
		),
		'+reviwiki' => array(
			'*' => array(
				'createpage' => false,
			),
			'user' => array(
				'createpage' => false,
				'movefile' => false,
			),
			'autoconfirmed' => array(
				'createpage' => true,
				'patrol' => false,
			),
		),
	),
	'wgRemoveGroups' => array(
		'default' => array(
			'bureaucrat' => array(
				'autopatrolled',
				'bot',
				'confirmed',
				'member',
				'rollbacker',
				'sysop',
			),
			'sysop' => array(
				'autopatrolled',
				'confirmed',
				'member',
				'rollbacker',
			),
		),
		'+grepobot' => array(
			'bureaucrat' => array(
				'botop',
			),
		),
		'+private' => array(
			'bureaucrat' => array(
				'member',
			),
			'sysop' => array(
				'member',
			),
		),
	),
	'wmgDisableAnonEditing' => array(
		'default' => false,
		'allthetropeswiki' => true,
		'encyclopediamuricanawiki' => true,
		'nationalewiki' => true,
		'nlallthetropeswiki' => true,
		'hyperiondevwiki' => true,
		'loginwiki' => true,
		'opensourcelearningwiki' => true,
		'patereswiki' => true,
		'peachywiki' => true,
		'poserdazfreebieswiki' => true,
	),
	// /Permissions

	// Piwik
	'wmgPiwikSiteID' => array(
		'default' => false,
		'allthetropeswiki' => 3,
		'keionrailwiki' => 4,
		'metawiki' => 1,
		'testwiki' => 2,
	),
	// /Piwik

	// Profiling
	'wgEnableProfileInfo' => array(
		'default' => false,
		'allthetropeswiki' => true,
		'nlallthetropeswiki' => true,
		'metawiki' => true,
	),
	// /Profiling
	
	// RC
	'wmgUseIRCRC' => array(
		'default' => true,
		'private' => false,
	),

	// Redirects
	'wgFixDoubleRedirects' => array(
		'default' => false,
		'allthetropeswiki' => true,
		'nlallthetropeswiki' => true,
	),
	// /Redirects

	// Restrictions
	'+wgRestrictionLevels' => array(
		'default' => array(
			'user',
			'steward'
		),
		'+metawiki' => array(
			'createwiki'
		),
	),
	'+wgRestrictionTypes' => array(
		'default' => array(
			'delete'
		),
	),
	'$wgRestrictDisplayTitle' => array(
		'default' => true,
		'portalwiki' => false,
	),
	// /Restrictions

	// Search
	'wmgUseCirrus' => array(
		'default' => false,
		//'allthetropeswiki' => true,
		//'mediawikitesterswiki' => true,
	),
	'wmgUseCirrusAsAlternate' => array(
		'default' => false,
		//'extloadwiki' => true,
	),
	// /Search

	// Server
	'wgArticlePath' => array(
		'default' => '/wiki/$1',
	),
	'wgDisableOutputCompression' => array(
		'default' => true,
	),
	'wgJobRunRate' => array(
		'default' => 0,
	),
	'wgResourceLoaderMaxQueryLength' => array(
		'default' => -1,
	),
	'wgScriptExtension' => array(
		'default' => '.php',
	),
	'wgScriptPath' => array(
		'default' => '/w',
	),
	'wgServer' => array(
		'default' => '//$lang.orain.org',
        	'encyclopediamuricanawiki' => 'http://encyclopediamuricana.us',
		'deguwiki' => 'http://degu.wiki',
		'nazisexposedwiki' => 'http://nazis.exposed',
		'nlallthetropeswiki' => '//nl-allthetropes.orain.org', // make it clear this wiki is a nl version (SSL does not cover nl.allthetropes.orain.org -John
		'rationalwiki' => 'http://rationalwiki.ssu.lt',
		'reviwiki' => 'http://wiki.revi.pe.kr',
		'spiralwiki' => '//spiral.wiki',
		'wikiconstituciowiki' => 'http://wikiconstitucio.org',
	),
	'wgShowHostnames' => array(
		'default' => true, // Show which server the request was serviced by
	),
	'wgUsePathInfo' => array(
		'default' => true,
	),
	// /Server

	// Style
	'wgDefaultSkin' => array(
		'default' => 'vector',
		'elderlordswiki' => 'monobook',
		'wikidemoswiki' => 'foreground',
	),
	'wgLogo' => array(
		'default' => "//$wmgUploadHostname/meta.orain.org/images/c/c6/Orain.png",
		'allthetropeswiki' => "//$wmgUploadHostname/allthetropes.orain.org/images/8/86/Logo-Square-v1-1x.png",
		'botwiki' => "//$wmgUploadHostname/meta.orain.org/images/6/65/BotWiki_logo.png",
		'computerclanwiki' => '//upload.wikimedia.org/wikipedia/commons/f/f7/CC_Wiki_Graphic_Mark_Small.png',
               'dangsunsnwiki' => '//upload.wikimedia.org/wikipedia/commons/e/e8/Kd-logo.png',
               'deguwiki' => '//$wmgUploadHostname/meta.orain.org/images/b/ba/Deguwikilogo.png',
		'enmodamobwiki' => "//$wmgUploadHostname/meta.orain.org/images/d/d6/Modamob-logo.png",
		'electrumwiki' => "//$wmgUploadHostname/electrum.orain.org/images/0/00/Logo_text_135.png",
		'frmodamobwiki' => "//$wmgUploadHostname/meta.orain.org/images/d/d6/Modamob-logo.png",
		'grayhawkwiki' => '//upload.wikimedia.org/wikipedia/commons/4/49/GrayhawkPaladinsLogo_%28small%29.png',
		'keionrailwiki' => '//upload.wikimedia.org/wikipedia/commons/e/e4/Subway_TokyoTozai.png',
		'levelswiki' => '//upload.wikimedia.org/wikipedia/commons/thumb/d/d1/Wikilevels_logo_text.png/135px-Wikilevels_logo_text.png',
		'linuxwiki' => '//$wmgUploadHostname/linux.orain.org/images/e/ed/Wiki_logo_Linux.png',
		'mediawikitesterswiki' => '//upload.wikimedia.org/wikipedia/commons/9/9a/MediaWikiTestersWiki.png',
		'mwmwiki' => "//$wmgUploadHostname/mwm.orain.org/images/a/a6/Wiki-Logo.png",
        	'nationalewiki' => "//$wmgUploadHostname/nationale.orain.org/images/2/29/Logo_of_the_Encyclopedia_Nationale.png",
		'nlallthetropeswiki' => "//$wmgUploadHostname/allthetropes.orain.org/images/8/86/Logo-Square-v1-1x.png",
		'peachywiki' => '//upload.wikimedia.org/wikipedia/commons/5/51/PeachyFrameworkLogo.png',
		'pigawiki' => "//$wmgUploadHostname/piga.orain.org/images/2/23/PigaLore.png",
		'portalwiki' => "//$wmgUploadHostname/portal.orain.org/images/f/fa/Portalpedia_Logo.png",
		'reviwiki' => '//upload.wikimedia.org/wikipedia/commons/thumb/5/53/Server-multiple.svg/135px-Server-multiple.svg.png',
		'spiralwiki' => '//upload.wikimedia.org/wikipedia/commons/thumb/b/bf/Spiral_project_logo.svg/135px-Spiral_project_logo.svg.png',
		'testwiki' => "//$wmgUploadHostname/test.orain.org/images/8/8d/Twlogo.png",
		'wikiconstituciowiki' => '//upload.wikimedia.org/wikipedia/commons/thumb/c/ce/Flag_of_Catalonia.svg/135px-Flag_of_Catalonia.svg.png',
		'wikinambaswiki' => '//upload.wikimedia.org/wikipedia/commons/thumb/5/53/Wikinambá.png/135px-Wikinambá.png',
		'verkeerwiki' => '//static.orain.org/verkeer.orain.org/images/9/94/Verkeerswiki_v1.0.png',
	),
	'wgStylePath' => array(
		'default' => "//$wmgUploadHostname/common/skins",
	),
	'wgUseAjax' => array(
		'default' => true,
	),
	// /Style
	
	// Time
	'wgLocaltimezone' => array(
		'default' => 'Europe/London',
		'nsswiki' => 'Asia/Seoul',
		'reviwiki' => 'Asia/Seoul',
		'worldnewswiki' => 'Asia/Taipei',
	),
	// /Time
	// Disable $wgTorLoadNodes
	'wgTorLoadNodes' => array(
		'default' => false,
	),
	// Translate
	'wgEnablePageTranslation' => array(
		'default' => true,
	),
	'wgTranslateDocumentationLanguageCode' => array(
		'default' => false,
	),
	'wgTranslateFuzzyBotName' => array(
		'default' => 'FuzzyBot',
	),
	'wmgUseTranslate' => array(
		'default' => false,
		'extloadwiki' => true, // all extensions are loaded on this wiki
		'mediawikitesterswiki' => true,
		'metawiki' => true,
		'spiralwiki' => true,
	),
	// /Translate

	// UrlShortener
	'wgUrlShortenerTemplate' => array(
		'default' => true,
	),
	'wgUrlShortenerTemplate' => array(
		'default' => '/o/$1',
	),
	'wgUrlShortenerDBName' => array(
		'default' => 'metawiki',
	),
	'wgUrlShortenerDomainsWhitelist' => array(
		'default' => array(
			'(.*\.)?orain\.org',
			'degu\.wiki',
			'encyclopediamuricana\.us',
			'espiral\.org',
			'wikiconstitucio\.org',
			'wiki\.revi\.pe\.kr'
		),
	),
	// /UrlShortener

	// Users
	'wgAllowUserJs' => array(
		'default' => true,
	),
	'wgAllowUserCss' => array(
		'default' => true,
	),
	// /Users
);

// From https://www.mediawiki.org/wiki/Manual:$wgConf#for_1.14_and_newer
function efGetSiteParams( $conf, $wiki ) {
	global $wikiTags;
	$site = null;
	$lang = null;
	foreach ( $conf->suffixes as $suffix ) {
		if ( substr( $wiki, -strlen( $suffix ) ) == $suffix ) {
			$site = $suffix;
			$lang = substr( $wiki, 0, -strlen( $suffix ) );
			break;
		}
	}
	return array(
		'suffix' => $site,
		'lang' => $lang,
		'params' => array(
			'lang' => $lang,
			'site' => $site,
			'wiki' => $wiki,
		),
		'tags' => isset( $wikiTags ) ? $wikiTags : array(),
	);
}

// Defaults
$wgGroupPermissions['bureaucrat']['renameuser'] = false;
$wgGroupPermissions['bureaucrat']['userrights'] = false;
$wgGroupPermissions['sysop']['importupload'] = false;
$wgGroupPermissions['sysop']['bigdelete'] = false;
$wgGroupPermissions['user']['upload'] = false;
unset( $wgGroupPermissions['steward'] );

foreach ( $wgConf->settings['wgServer'] as $db => $server ) {
	if ( substr( $server, 0, 2 ) == '//' ) {
		$canonical =& $wgConf->settings['wgCanonicalServer'][$db];
		$canonical = $canonical ? : ( 'https:' . $server );
	}
}

$wmgDocumentURI = isset( $_SERVER['DOCUMENT_URI'] ) ? $_SERVER['DOCUMENT_URI'] : null;
$wmgHTTPhost = isset( $_SERVER['HTTP_HOST'] ) ? $_SERVER['HTTP_HOST'] : null;

if ( ( basename( $_SERVER["SCRIPT_FILENAME"] ) == "thumb.php" ) && isset( $_REQUEST['sitex'] ) ) {
	$wmgHostname = $_REQUEST['sitex'];
} elseif ( preg_match( '/^\/(.*?)\/load.php$/', $wmgDocumentURI, $matches ) ) {
	$wmgHostname = $matches[1];
} elseif ( preg_match( '/^www\.(.*?\..*?)$/', $wmgHTTPhost, $matches ) ) {
	$wmgHostname = $matches[1];
} else {
	$wmgHostname = $wmgHTTPhost;
}

$wgConf->siteParamsCallback = 'efGetSiteParams';

if ( defined( "MW_DB" ) ) {
	$wgDBname = MW_DB;
	$subdomain = substr( $wgDBname, 0, -4 );
	$server = & $wgConf->settings['wgServer'][$wgDBname];
	$wmgHostname = isset( $server ) ? $server : "$subdomain.orain.org";
// TODO: Fix this routing hack
} elseif ( $search = array_search( '//' . $wmgHostname, $wgConf->settings['wgServer'] ) ) {
	$wgDBname = $search;
} elseif ( $search = array_search( 'http://' . $wmgHostname, $wgConf->settings['wgServer'] ) ) {
	$wgDBname = $search;
} elseif ( $search = array_search( 'https://' . $wmgHostname, $wgConf->settings['wgServer'] ) ) {
	$wgDBname = $search;
} elseif ( preg_match( '/^(.+?)\.(.+?)\.orain\.org$/', $wmgHostname, $matches ) ) {
	$wgDBname = $matches[1] . $matches[2];
} elseif ( preg_match( '/^(.*)\.orain\.org$/', $wmgHostname, $matches ) ) {
	$wgDBname = $matches[1] . 'wiki';
} elseif ( $wmgHostname === 'meta.orain.org' ) {
	# In case the DB list fails we ALWAYS want metawiki to be accessible so hardcode this!
	$wgDBname = 'metawiki';
} else {
	$wgDBname = false;
}

/**
 * Fill the database list
 */
$DBlist = array_map( 'trim', file( "$IP/all.dblist" ) );
$wgLocalDatabases = array();

foreach ( $DBlist as $wiki ) {
	$wiki = explode( '|', $wiki, 3 );
	list( $DBname, $siteName, $wikiTagList ) = array_pad( $wiki, 3, '' );
	$wgLocalDatabases[] = $DBname;
	$wgConf->settings['wgSitename'][$DBname] = $siteName;
	if ( $DBname == $wgDBname ) {
		$wikiTags = array_filter( explode( '|', $wikiTagList ) );
	}
}

$wgConf->wikis = & $wgLocalDatabases;

if ( !in_array( $wgDBname, $wgLocalDatabases ) ) {
	header( "HTTP/1.1 404 Not Found" );
	echo( <<<RESP
<!DOCTYPE html>
<html>
<head><title>404 Not Found</title></head>
<body bgcolor="white">
<center><h1>404 Not Found</h1>
<h2>Unknown database</h2></center>
<hr /><center>MediaWiki</center>
</body>
</html>
RESP
	);
	exit();
}

/**
 * Generally setup the given wiki
 */

$wgConf->extractAllGlobals( $wgDBname );

$wgGroupPermissions['confirmed'] = & $wgGroupPermissions['autoconfirmed'];

// Group overrides
foreach ( $defaultGroupOverrides as $group => $permissions ) {
	if ( !array_key_exists( $group, $wgGroupPermissions ) ) {
		$wgGroupPermissions[$group] = array();
	}
	$wgGroupPermissions[$group] = $permissions + $wgGroupPermissions[$group];
}

foreach ( $specificGroupOverrides as $group => $permissions ) {
	if ( !array_key_exists( $group, $wgGroupPermissions ) ) {
		$wgGroupPermissions[$group] = array();
	}
	$wgGroupPermissions[$group] = $permissions + $wgGroupPermissions[$group];
}

if ( $wgDBname !== 'metawiki' ) {
	$wgForeignFileRepos[] = array(
		'class' => 'ForeignDBRepo',
		'name' => 'metawiki-foreign',
		'url' => "//$wmgUploadHostname/meta.orain.org/images",
		'hashLevels' => 2,
		'transformVia404' => true,
		'initialCapital' => true,
		'descBaseUrl' => '//meta.orain.org/wiki/File:',
		'scriptDirUrl' => '//meta.orain.org/w',
		'fetchDescription' => false,
		'dbType' => $wgDBtype,
		'dbServer' => $wgDBserver,
		'dbUser' => $wgDBuser,
		'dbPassword' => $wgDBpassword,
		'dbName' => 'metawiki',
		'dbFlags' => DBO_DEFAULT,
		'tablePrefix' => '',
		'hasSharedCache' => true,
		'directory' => "/mnt/mediawiki/uploads/meta.orain.org/images",
	);
}

/**
 * Define access rights for specific wiki groups
 */
if ( $wmgClosedWiki ) {
	//Assign its own CentralNotice 'project' as long as its not already orain
	if ( $wgNoticeProject !== 'orain' ) {
		$wgNoticeProject = 'closed';
	}
}

if ( $wmgPrivateWiki ) {
	// Make it easier to privatise wikis and expand on the options variably
	//Assign its own CentralNotice 'project' as long as its not already orain
	if ( $wgNoticeProject !== 'orain' ) {
		$wgNoticeProject = 'private';
	}
	// Whitelist! Default carried over for tracking.
	$wgWhitelistRead =
		array(
			"Main Page",
			"Special:UserLogin",
			"Special:UserLogout",
			"Special:ResetPassword",
			"MediaWiki:Common.css",
			"Special:CentralLogin"
		);
}

if ( $wmgDisableAnonEditing ) {
	$wgGroupPermissions['*']['edit'] = false;
	$wgGroupPermissions['*']['createpage'] = false;
}

if ( $wmgArchivedWiki ) {
	$wgReadOnly = "Archived wiki";
}

if ( isset( $wgCentralAuthAutoLoginWikis[$wmgHostname] ) ) {
	// Don't log into self
	unset( $wgCentralAuthAutoLoginWikis[$wmgHostname] );
	$wgCentralAuthCookieDomain = $wmgHostname;
}

$wgCacheDirectory = '/tmp/mw-cache';
$wgFileCacheDirectory = "/var/tmp/mediawiki/cache/$wmgHostname";
$wgLoadScript = "//$wmgUploadHostname/$wmgHostname/load.php";
$wgLocalisationCacheConf['manualRecache'] = true;
$wgUploadDirectory = "/mnt/mediawiki/uploads/$wmgHostname/images";
$wgUploadPath = "//$wmgUploadHostname/$wmgHostname/images";

# Load the split up files...
require_once( "$IP/LocalExtensions.php" );
require_once( "$IP/LocalLogging.php" );
require_once( "$IP/LocalDebugUsers.php" );
require_once( "$IP/LocalPiwik.php" );
require_once( "$IP/Redis.php" );
require_once( "$IP/Database.php" ); // Multi-master set up --John
